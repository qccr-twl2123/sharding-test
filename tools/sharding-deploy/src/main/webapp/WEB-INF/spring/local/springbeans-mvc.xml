<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd">
	<bean id="appConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<array>
				<value>/WEB-INF/env/env.properties</value>
			</array>
		</property>
	</bean>	
	<aop:aspectj-autoproxy />
	<context:component-scan base-package="com.qccr.dinner.controller" />
	<!-- 统一权限 --> 
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean class="com.qccr.dinner.web.view.MappingHttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	
	<mvc:default-servlet-handler />
	<!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="true" />
		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />
		<property name="parameterName" value="format" />
		<!-- 是否忽略Accept Header -->
		<property name="ignoreAcceptHeader" value="false" />
		<property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用 -->
			<value>
				json=application/json
				<!-- xml=application/xml -->
				html=text/html
			</value>
		</property>
		<!-- 默认的content type -->
		<property name="defaultContentType" value="text/html" />
	</bean>
	<!-- 内容协商视图解析器；根据客户端不同的请求决定不同的view进行响应 -->
	<!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver） -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"></property>
		<!-- 内容协商管理器 用于决定media type -->
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<!-- 默认视图 放在解析链最后 -->
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为5MB -->
		<property name="defaultEncoding" value="UTF-8" />
		<property name="maxUploadSize" value="10428800" />
	</bean>

	<!-- freemarker -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/ftl" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="number_format">0.##########</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
			</props>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="order" value="2" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="3" />
		<property name="prefix" value="/WEB-INF/views/html" />
		<property name="suffix" value=".html" />
	</bean>

	<!-- <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller"> 
		<property name="classesToBeBound"> <list> <value>com.toowell.market.common.weixin.sdk.msg.TextMessage</value> 
		</list> </property> </bean> <bean id="jaxbView" class="org.springframework.web.servlet.view.xml.MarshallingView"> 
		<constructor-arg ref="jaxb2Marshaller" /> </bean> -->
	<mvc:resources location="/WEB-INF/resources/js/" mapping="/resources/js/**" />
	<mvc:resources location="/WEB-INF/resources/images/" mapping="/resources/images/**" />
	<mvc:resources location="/WEB-INF/resources/css/" mapping="/resources/css/**" />
	<mvc:resources location="/WEB-INF/env/" mapping="/crossdomain.xml" />
	<mvc:resources location="/WEB-INF/resources/datePicker/" mapping="/resources/datePicker/**" />
	<mvc:resources location="/WEB-INF/resources/3rdparty/3rdparty/" mapping="/resources/3rdparty/3rdparty/**" />
	<mvc:resources location="/WEB-INF/resources/sui/" mapping="/resources/sui/**" />
	<mvc:resources location="/WEB-INF/resources/copy/copyZero/" mapping="/resources/copy/copyZero/**" />

</beans>